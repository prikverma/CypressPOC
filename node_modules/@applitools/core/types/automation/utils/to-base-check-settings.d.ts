import type { Region } from '@applitools/utils';
import type { CheckSettings } from '../types';
import type { CheckSettings as BaseCheckSettings } from '@applitools/core-base';
import type { SpecType, ElementReference, Selector, Driver } from '@applitools/driver';
import { Logger } from '@applitools/logger';
export declare function hasCodedRegions<TSpec extends SpecType>(settings: CheckSettings<TSpec>): boolean;
export declare function extractMobileElementsIntoCheckSettings<TSpec extends SpecType>({ settings, driver, logger, }: {
    settings: CheckSettings<TSpec>;
    driver: Driver<TSpec>;
    logger: Logger;
}): Promise<any>;
export declare function toBaseCheckSettings<TSpec extends SpecType>({ settings }: {
    settings: CheckSettings<TSpec>;
}): {
    elementReferences: {
        target: ElementReference<TSpec> | undefined;
        scrolling: ElementReference<TSpec> | undefined;
        calculate: ElementReference<TSpec>[];
    };
    getBaseCheckSettings: ({ calculatedRegions, preserveTransformation, }: {
        calculatedRegions: {
            selector?: Selector;
            regions: Region[];
        }[];
        preserveTransformation?: boolean | undefined;
    }) => BaseCheckSettings;
};
