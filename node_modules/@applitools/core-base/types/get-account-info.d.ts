import type { EyesServerSettings } from './types';
import { type Logger } from '@applitools/logger';
import { type CoreRequests } from './server/requests';
type Options = {
    requests: CoreRequests;
    agentId: string;
    logger: Logger;
};
export declare function makeGetAccountInfo({ requests, agentId: defaultAgentId, logger: mainLogger }: Options): ({ settings, logger, }: {
    settings: EyesServerSettings;
    logger?: Logger | undefined;
}) => Promise<{
    eyesServer: {
        agentId: string;
        eyesServerUrl: string;
        apiKey: string;
        proxy?: import("@applitools/req").Proxy | undefined;
        useDnsCache?: boolean | undefined;
    };
    ufgServer: {
        agentId: string;
        ufgServerUrl: string;
        accessToken: string;
        proxy?: import("@applitools/req").Proxy | undefined;
        useDnsCache?: boolean | undefined;
    };
    supportedEnvironmentsUrl: string;
    stitchingServiceUrl: string;
    uploadUrl: string;
    maxImageHeight: number;
    maxImageArea: number;
    rcaEnabled: boolean;
    selfHealingEnabled: boolean;
    ecEnabled: boolean;
}>;
export {};
